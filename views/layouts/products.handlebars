{{!-- Products List with Modern UI --}}
<div class="min-h-screen bg-gray-50">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8">
    {{!-- Filters Section --}}
    <div class="bg-white rounded-lg shadow-sm p-4 mb-6">
      <form id="filters-form" class="flex flex-wrap gap-4 items-end">
        <div class="flex-1 min-w-[200px]">
          <label class="block text-sm font-medium text-gray-700 mb-1">Search</label>
          <input type="text" name="query" value="{{query}}" 
                 class="w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
        </div>
        <div class="w-32">
          <label class="block text-sm font-medium text-gray-700 mb-1">Sort by Price</label>
          <select name="sort" class="w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
            <option value="">None</option>
            <option value="asc" {{#if (eq sort "asc")}}selected{{/if}}>Lowest</option>
            <option value="desc" {{#if (eq sort "desc")}}selected{{/if}}>Highest</option>
          </select>
        </div>
        <div class="w-32">
          <label class="block text-sm font-medium text-gray-700 mb-1">Per Page</label>
          <select name="limit" class="w-full rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500">
            <option value="10" {{#if (eq limit "10")}}selected{{/if}}>10</option>
            <option value="20" {{#if (eq limit "20")}}selected{{/if}}>20</option>
            <option value="50" {{#if (eq limit "50")}}selected{{/if}}>50</option>
          </select>
        </div>
        <button type="submit" 
                class="bg-indigo-600 text-white px-4 py-2 rounded-md hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:ring-offset-2">
          Apply Filters
        </button>
      </form>
    </div>

    {{!-- Products Grid --}}
    <div class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6">
      {{#each products}}
        <div class="bg-white rounded-lg shadow-sm overflow-hidden hover:shadow-md transition-shadow duration-300">
          <img src="{{thumbnails.[0]}}" alt="{{title}}" class="w-full h-48 object-cover">
          <div class="p-4">
            <h3 class="text-lg font-medium text-gray-900">{{title}}</h3>
            <p class="mt-1 text-sm text-gray-500">{{description}}</p>
            <div class="mt-2 flex items-center justify-between">
              <span class="text-lg font-medium text-gray-900">${{price}}</span>
              <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium {{#if status}}bg-green-100 text-green-800{{else}}bg-red-100 text-red-800{{/if}}">
                {{#if status}}In Stock{{else}}Out of Stock{{/if}}
              </span>
            </div>
            <div class="mt-4 flex space-x-2">
              <a href="/products/{{_id}}" 
                 class="flex-1 text-center px-4 py-2 border border-transparent text-sm font-medium rounded-md text-indigo-700 bg-indigo-100 hover:bg-indigo-200">
                View Details
              </a>
              <button onclick="addToCart('{{_id}}')" 
                      class="flex-1 px-4 py-2 border border-transparent text-sm font-medium rounded-md text-white bg-indigo-600 hover:bg-indigo-700">
                Add to Cart
              </button>
            </div>
          </div>
        </div>
      {{/each}}
    </div>

    {{!-- Pagination --}}
    <div class="mt-6 flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6">
      <div class="flex flex-1 justify-between sm:hidden">
        {{#if hasPrevPage}}
          <a href="{{prevLink}}" class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Previous</a>
        {{/if}}
        {{#if hasNextPage}}
          <a href="{{nextLink}}" class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50">Next</a>
        {{/if}}
      </div>
      <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
        <div>
          <p class="text-sm text-gray-700">
            Showing page <span class="font-medium">{{page}}</span> of <span class="font-medium">{{totalPages}}</span>
          </p>
        </div>
        <div>
          <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
            {{#if hasPrevPage}}
              <a href="{{prevLink}}" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                <span class="sr-only">Previous</span>
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                </svg>
              </a>
            {{/if}}
            
            {{#if hasNextPage}}
              <a href="{{nextLink}}" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                <span class="sr-only">Next</span>
                <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                </svg>
              </a>
            {{/if}}
          </nav>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
async function addToCart(productId) {
  try {
    // Get the user's cart ID (you'll need to implement this based on your auth system)
    const cartId = localStorage.getItem('cartId');
    
    if (!cartId) {
      // Create a new cart if none exists
      const response = await fetch('/api/carts', {
        method: 'POST'
      });
      const data = await response.json();
      localStorage.setItem('cartId', data.payload._id);
    }
    
    // Add the product to the cart
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: 1 })
    });
    
    if (response.ok) {
      // Show success message
      alert('Product added to cart successfully!');
    } else {
      throw new Error('Failed to add product to cart');
    }
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to add product to cart');
  }
}
</script>