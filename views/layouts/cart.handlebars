{{!-- Cart View with Modern UI --}}
<div class="min-h-screen bg-gray-50 py-8">
  <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
    <div class="bg-white rounded-lg shadow-sm overflow-hidden">
      <div class="px-4 py-5 sm:px-6">
        <h1 class="text-2xl font-bold text-gray-900">Shopping Cart</h1>
      </div>

      {{#if cart.products.length}}
        <div class="border-t border-gray-200 px-4 py-6 sm:px-6">
          <div class="flow-root">
            <ul role="list" class="-my-6 divide-y divide-gray-200">
              {{#each cart.products}}
                <li class="flex py-6">
                  <div class="h-24 w-24 flex-shrink-0 overflow-hidden rounded-md border border-gray-200">
                    {{#if this.product.thumbnails.[0]}}
                      <img src="{{this.product.thumbnails.[0]}}" alt="{{this.product.title}}" class="h-full w-full object-cover object-center">
                    {{else}}
                      <div class="h-full w-full bg-gray-200 flex items-center justify-center">
                        <span class="text-gray-400 text-sm">No image</span>
                      </div>
                    {{/if}}
                  </div>

                  <div class="ml-4 flex flex-1 flex-col">
                    <div>
                      <div class="flex justify-between text-base font-medium text-gray-900">
                        <h3>
                          <a href="/products/{{this.product._id}}">{{this.product.title}}</a>
                        </h3>
                        <p class="ml-4">${{multiply this.product.price this.quantity}}</p>
                      </div>
                      <p class="mt-1 text-sm text-gray-500">{{this.product.category}}</p>
                    </div>
                    <div class="flex flex-1 items-end justify-between text-sm">
                      <div class="flex items-center space-x-2">
                        <label for="quantity-{{this.product._id}}" class="text-gray-500">Qty</label>
                        <input type="number" 
                               id="quantity-{{this.product._id}}" 
                               value="{{this.quantity}}" 
                               min="1" 
                               max="{{this.product.stock}}"
                               class="w-16 rounded-md border-gray-300 shadow-sm focus:border-indigo-500 focus:ring-indigo-500 sm:text-sm"
                               onchange="updateQuantity('{{../cart._id}}', '{{this.product._id}}', this.value)">
                      </div>

                      <div class="flex">
                        <button type="button" 
                                onclick="removeFromCart('{{../cart._id}}', '{{this.product._id}}')"
                                class="font-medium text-indigo-600 hover:text-indigo-500">Remove</button>
                      </div>
                    </div>
                  </div>
                </li>
              {{/each}}
            </ul>
          </div>
        </div>

        <div class="border-t border-gray-200 px-4 py-6 sm:px-6">
          <div class="flex justify-between text-base font-medium text-gray-900">
            <p>Subtotal</p>
            <p>${{calculateTotal cart.products}}</p>
          </div>
          <p class="mt-0.5 text-sm text-gray-500">Shipping and taxes calculated at checkout.</p>
          <div class="mt-6 space-y-3">
            <button onclick="clearCart('{{cart._id}}')"
                    class="w-full flex items-center justify-center px-6 py-3 border border-transparent rounded-md shadow-sm text-base font-medium text-white bg-red-600 hover:bg-red-700">
              Clear Cart
            </button>
            <a href="/products" 
               class="flex items-center justify-center px-6 py-3 border border-gray-300 rounded-md shadow-sm text-base font-medium text-gray-700 bg-white hover:bg-gray-50">
              Continue Shopping
            </a>
          </div>
        </div>
      {{else}}
        <div class="px-4 py-12 sm:px-6 text-center">
          <svg class="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor" aria-hidden="true">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z" />
          </svg>
          <h3 class="mt-2 text-sm font-medium text-gray-900">Your cart is empty</h3>
          <p class="mt-1 text-sm text-gray-500">Start adding some items to your cart!</p>
          <div class="mt-6">
            <a href="/products" class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-md shadow-sm text-white bg-indigo-600 hover:bg-indigo-700">
              View Products
            </a>
          </div>
        </div>
      {{/if}}
    </div>
  </div>
</div>

<script>
async function updateQuantity(cartId, productId, quantity) {
  try {
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'PUT',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: parseInt(quantity) })
    });
    
    if (!response.ok) throw new Error('Failed to update quantity');
    
    // Reload the page to reflect changes
    window.location.reload();
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to update quantity');
  }
}

async function removeFromCart(cartId, productId) {
  try {
    const response = await fetch(`/api/carts/${cartId}/products/${productId}`, {
      method: 'DELETE'
    });
    
    if (!response.ok) throw new Error('Failed to remove product');
    
    // Reload the page to reflect changes
    window.location.reload();
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to remove product');
  }
}

async function clearCart(cartId) {
  if (!confirm('Are you sure you want to clear your cart?')) return;
  
  try {
    const response = await fetch(`/api/carts/${cartId}`, {
      method: 'DELETE'
    });
    
    if (!response.ok) throw new Error('Failed to clear cart');
    
    // Reload the page to reflect changes
    window.location.reload();
  } catch (error) {
    console.error('Error:', error);
    alert('Failed to clear cart');
  }
}
</script>